# Stage 1: Build the application
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json package-lock.json ./

# Add this step to update package-lock.json
RUN npm install

# Install dependencies
RUN npm ci

# Copy the rest of the application
COPY . .

# Set environment variables for build
ARG NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID
ARG NEXT_PUBLIC_ZEROEX_API_KEY
ENV NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=$NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID
ENV NEXT_PUBLIC_ZEROEX_API_KEY=$NEXT_PUBLIC_ZEROEX_API_KEY

# Install missing dependencies
RUN npm install encoding sharp

# Build the application
RUN npm run build

# Stage 2: Create the minimal runtime image
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Copy the built application from the previous stage
COPY --from=builder /app/.next /app/.next
COPY --from=builder /app/public /app/public
COPY --from=builder /app/node_modules /app/node_modules
COPY --from=builder /app/package.json /app/package.json
COPY --from=builder /app/next.config.mjs /app/next.config.mjs

# Expose the port the app runs on
EXPOSE 3000

# Set environment variables if needed
ENV NODE_ENV production

# Command to run the application
CMD ["npm", "start"]
